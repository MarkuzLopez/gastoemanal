{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","helper.js","componentes/Presupuesto.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","nombreGasto","React","createRef","cantidadGasto","crearGasto","e","preventDefault","gasto","_this","current","value","agregarGasto","currentTarget","reset","onSubmit","this","className","ref","type","placeholder","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","componentes_Gasto","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Presupuesto","Restante","restante","revisarPresupuesto","ControlPresupuesto","Fragment","componentes_Presupuesto","componentes_Restante","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","obtenerPresupuesto","prompt","setState","console","log","objectSpread","state","concat","Date","now","restarPresupuesto","cantidad","restar","Number","String","componentes_Header","componentes_Formulario","componentes_Listado","componentes_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAUeA,SARA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,UAAKH,EAAMI,WC4CRC,6MA3CXC,YAAcC,IAAMC,cACpBC,cAAgBF,IAAMC,cAEtBE,WAAa,SAACC,GAEVA,EAAEC,iBAEF,IAAMC,EAAQ,CACVP,YAAaQ,EAAKR,YAAYS,QAAQC,MACtCP,cAAeK,EAAKL,cAAcM,QAAQC,OAI9CF,EAAKd,MAAMiB,aAAaJ,GAGxBF,EAAEO,cAAcC,iFAIhB,OACIlB,EAAAC,EAAAC,cAAA,QAAMiB,SAAUC,KAAKX,YACjBT,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,SACXrB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOoB,IAAKF,KAAKf,YAAagB,UAAU,eAAeE,KAAK,OAAOC,YAAY,oBAGnFxB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,SACXrB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOoB,IAAKF,KAAKZ,cAAea,UAAU,eAAeE,KAAK,OAAOC,YAAY,aAGrFxB,EAAAC,EAAAC,cAAA,SAAOmB,UAAU,8BAA8BE,KAAK,SAASR,MAAM,oBApC1DU,aCkBVC,mLAjBF,IAAAC,EACkCP,KAAKrB,MAAMa,MAA1CJ,EADHmB,EACGnB,cAAeH,EADlBsB,EACkBtB,YACvB,OACIL,EAAAC,EAAAC,cAAA,MAAImB,UAAU,UACVrB,EAAAC,EAAAC,cAAA,SACKG,EACDL,EAAAC,EAAAC,cAAA,QAAMmB,UAAU,SAAhB,IAA0Bb,EAA1B,cAPAiB,aCwBLG,mLAtBF,IAAAf,EAAAO,KACL,OACIpB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,qBACXrB,EAAAC,EAAAC,cAAA,qBAGI2B,OAAOC,KAAKV,KAAKrB,MAAMgC,QAAQC,IAAI,SAAAC,GAAG,OAClCjC,EAAAC,EAAAC,cAACgC,EAAD,CACID,IAAKA,EACLrB,MAAOC,EAAKd,MAAMgC,OAAOE,eAV/BR,aCJTU,EAAqB,SAAAC,GAC9B,IAAIC,EAAmBC,SAASF,EAAa,KAAO,EAEpD,OAAIC,EAAmB,GACZA,GCeAE,mLAbP,OACGvC,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,uBAAf,kBACqBD,KAAKrB,MAAMqC,oBALjBX,aCqBXe,mLAjBT,IAAMJ,EAAchB,KAAKrB,MAAMqC,YACzBK,EAAYrB,KAAKrB,MAAM0C,SAE3B,OACEzC,EAAAC,EAAAC,cAAA,OACAmB,UFFwB,SAACe,EAAaK,GAU5C,OAPKL,EAAc,EAAKK,EACZ,qBACAL,EAAc,EAAKK,EACnB,sBAEA,4BENKC,CAAmBN,EAAaK,IAD3C,cAEcrB,KAAKrB,MAAM0C,iBATZhB,aCuBRkB,mLApBP,OACI3C,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,KACI5C,EAAAC,EAAAC,cAAC2C,EAAD,CACET,YAAehB,KAAKrB,MAAMqC,cAE5BpC,EAAAC,EAAAC,cAAC4C,EAAD,CAEEV,YAAehB,KAAKrB,MAAMqC,YAC1BK,SAAarB,KAAKrB,MAAM0C,mBAVRhB,aC0GnBsB,cArGb,SAAAA,EAAYhD,GAAO,IAAAc,EAAA,OAAAgB,OAAAmB,EAAA,EAAAnB,CAAAT,KAAA2B,IACjBlC,EAAAgB,OAAAoB,EAAA,EAAApB,CAAAT,KAAAS,OAAAqB,EAAA,EAAArB,CAAAkB,GAAAI,KAAA/B,KAAMrB,KAcRqD,mBAAqB,WACnB,IAAIhB,EAAciB,OAAO,2BAERlB,EAAmBC,GAElCvB,EAAKyC,SAAS,CACZlB,YAAaA,EACbK,SAAUL,IAGZmB,QAAQC,IAAI,0BAzBG3C,EAiCnBG,aAAe,SAAAJ,GAGb,IAAMmB,EAAMF,OAAA4B,EAAA,EAAA5B,CAAA,GAAQhB,EAAK6C,MAAM3B,QAG/BA,EAAM,QAAA4B,OAASC,KAAKC,QAAWjD,EAI/BC,EAAKiD,kBAAkBlD,EAAMJ,eAG7BK,EAAKyC,SAAS,CACZvB,YA/CelB,EAqDnBiD,kBAAoB,SAAAC,GAElB,IAAIC,EAASC,OAAOF,GAGhBtB,EAAY5B,EAAK6C,MAAMjB,SAG3BA,GAAYuB,EAEZvB,EAAYyB,OAAOzB,GAGnB5B,EAAKyC,SAAS,CACZb,cAjEF5B,EAAK6C,MAAQ,CACXtB,YAAa,GACbK,SAAU,GACVV,OAAQ,IALOlB,mFAYfO,KAAKgC,sDA6DP,OACEpD,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,kBACbrB,EAAAC,EAAAC,cAACiE,EAAD,CACEhE,OAAO,kBAETH,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,iCACbrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,OACbrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,mBACbrB,EAAAC,EAAAC,cAACkE,EAAD,CACEpD,aAAcI,KAAKJ,gBAGvBhB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,mBACbrB,EAAAC,EAAAC,cAACmE,EAAD,CACEtC,OAAQX,KAAKsC,MAAM3B,SAErB/B,EAAAC,EAAAC,cAACoE,EAAD,CACElC,YAAehB,KAAKsC,MAAMtB,YAC1BK,SAAYrB,KAAKsC,MAAMjB,sBA7FrBhB,aCIE8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2340cfe9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props)  =>  { \n    return( \n        <header>\n            <h1>{props.titulo}</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Formulario extends Component {\n\n    //refs para los campos del formulario \n    nombreGasto = React.createRef();\n    cantidadGasto = React.createRef();\n\n    crearGasto = (e) => {\n        /// prevenir el default\n        e.preventDefault()\n        // crear el objeto con los datos \n        const gasto = {\n            nombreGasto: this.nombreGasto.current.value,\n            cantidadGasto: this.cantidadGasto.current.value\n        }\n\n        // agregarlo y enviarlo  por  props \n        this.props.agregarGasto(gasto);\n\n        // resetear el formulario  (opcional)\n        e.currentTarget.reset();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.crearGasto} >\n                <h2>Agrega tus gastos aqui</h2>\n                <div className=\"campo\">\n                    <label>Nombre Gasto</label>\n                    <input ref={this.nombreGasto} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Cantidad</label>\n                    <input ref={this.cantidadGasto} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. 300\" />\n                </div>\n\n                <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\n            </form>\n        )\n    }\n}\n\nFormulario.propTypes = {  \n    agregarGasto: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Gasto extends Component {\n    render() {\n        const { cantidadGasto, nombreGasto } = this.props.gasto;\n        return (\n            <li className=\"gastos\">\n                <p>\n                    {nombreGasto}\n                    <span className=\"gasto\"> {cantidadGasto} </span>\n                </p>\n            </li>\n        )\n    }\n}\n\nGasto.propTypes = { \n    gasto: PropTypes.object.isRequired\n}\n\nexport default Gasto;","import React, { Component } from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nclass Listado extends Component {\n    render() {\n        return (\n            <div className=\"gastos-realizados\">\n                <h2>LISTADO</h2>\n                {\n                    /// Object sirve para obtener la llave  y el map para iterarlo  \n                    Object.keys(this.props.gastos).map(key => (\n                        <Gasto\n                            key={key}\n                            gasto={this.props.gastos[key]}\n                        />\n                    ))\n                }\n            </div>\n        )\n    }\n}\n\nListado.propTypes = { \n    gastos: PropTypes.object.isRequired\n}\n\nexport default Listado;","export const validarPresupuesto = presupuesto => {\n    let totalPresupuesto = parseInt(presupuesto, 10) || 0;\n\n    if (totalPresupuesto > 0) {\n        return totalPresupuesto;\n    } else {\n        return false;\n    }\n}\n\nexport const revisarPresupuesto = (presupuesto, restante) => {\n    let clase;\n    // Comprobar el 25% \n    if ((presupuesto / 4) > restante) {\n        clase = 'alert alert-danger';\n    } else if ((presupuesto / 2) > restante) {\n        clase = 'alert alert-warning'\n    } else {\n        clase = 'alert alert alert-success';\n    }\n    return clase;\n} ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nclass Presupuesto extends Component {\n\n    render() {\n        return (\n           <div className=\"alert alert-primary\" >\n                Presupuesto: $ {this.props.presupuesto}  \n           </div>\n        )\n    }\n}\n\nPresupuesto.propTypes = { \n    presupuesto: PropTypes.string.isRequired\n}\n\n\nexport default Presupuesto;","import React, { Component } from 'react';\nimport { revisarPresupuesto } from '../helper';\nimport PropTypes from 'prop-types';\n\nclass Restante extends Component {\n\n    render() {\n      const presupuesto = this.props.presupuesto;\n      const restante =  this.props.restante;\n\n        return (\n          <div \n          className={revisarPresupuesto(presupuesto, restante)} >\n            Restante $ {this.props.restante}\n          </div>\n        )\n    }\n}\n\nRestante.propTypes = { \n  presupuesto: PropTypes.string.isRequired,\n  restante: PropTypes.string.isRequired\n}\n\nexport default Restante;\n","import React, {Component} from 'react';\nimport Presupuesto from './Presupuesto';\nimport Restante from './Restante';\nimport PropTypes from 'prop-types';\n\nclass ControlPresupuesto extends  Component  { \n    render() { \n        return(\n            <React.Fragment>\n                <Presupuesto \n                  presupuesto = {this.props.presupuesto}\n                />\n                <Restante \n                \n                  presupuesto = {this.props.presupuesto}\n                  restante =  {this.props.restante}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\nControlPresupuesto.propTypes = { \n    presupuesto: PropTypes.string.isRequired,\n    restante: PropTypes.string.isRequired\n}\n\nexport default ControlPresupuesto;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport {validarPresupuesto} from '../helper';\nimport ControlPresupuesto from './ControlPresupuesto';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      presupuesto: '',\n      restante: '',\n      gastos: {\n\n      }\n    }\n  }\n\n  componentDidMount() { \n      this.obtenerPresupuesto();\n  }\n\n  obtenerPresupuesto = () => { \n    let presupuesto = prompt('Cual es el presupuesto?');    \n    \n    let resultado =  validarPresupuesto(presupuesto);\n    if(resultado) { \n      this.setState({ \n        presupuesto: presupuesto,\n        restante: presupuesto\n      })     \n    } else { \n      console.log('presupuesto no valido');      \n    }\n  }\n\n\n\n  // agregar un nuevo gasto al state\n\n  agregarGasto = gasto => {\n\n    // tomar una coppia del state actual \n    const gastos = { ...this.state.gastos }\n\n    // agregar al gasto al objeto  del state \n    gastos[`gasto${Date.now()}`] = gasto;\n\n\n    // restar el presupuesto \n    this.restarPresupuesto(gasto.cantidadGasto)\n\n    // ponerlo en state  \n    this.setState({\n      gastos\n    })\n\n  }\n\n  /// Restar del presupuesto cuando un gasto se crea\n  restarPresupuesto = cantidad => { \n    // leer el gasnto\n    let restar = Number(cantidad);\n\n    // tomar una copia del State actual\n    let restante =  this.state.restante;      \n      \n    // lo restamos \n    restante -= restar;\n    \n    restante =  String(restante);\n\n    // agregamos el  uevo state  \n    this.setState({ \n      restante\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App containter\">\n        <Header\n          titulo='Gasto Semanal'\n        />\n        <div className=\"contenido-principal contenido\">\n          <div className=\"row\" >\n            <div className=\"one-half column\">\n              <Formulario\n                agregarGasto={this.agregarGasto}\n              />\n            </div>\n            <div className=\"one-half column\" >\n              <Listado\n                gastos={this.state.gastos}\n              />\n              <ControlPresupuesto \n                presupuesto = {this.state.presupuesto}\n                restante = {this.state.restante}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}